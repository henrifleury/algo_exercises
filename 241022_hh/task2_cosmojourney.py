'''
Отдыхая в деревне Пётр мысленно вернулся в детство и вспомнил одну из своих любимых
 компьютерных игр. В мире этой игры произошёл катаклизм, разорвавший его на множество
  островов летающих в космическом пространстве. Со временем острова расположились в
   пространстве ровным рядом, один за другим.

После катаклизма, осталось всего два способа путешествовать по миру:

1. магические паромы, перемещающиеся между соседними островами (естественно, паром может
 двигаться в обе стороны), таким образом с острова, который стоит на i-ом месте
  в космическом ряду, можно попасть на i-1 и i+1 острова;

2. порталы, через которые можно телепортироваться между островами независимо от расстояния,
 но только если до катаклизма эти острова составляли один материк (любопытно, что материки в
  этом мире имели не названия, а номера).

Петру стало интересно, за какое минимальное количество перемещений можно добраться от
первого острова до последнего. Помогите ему это выяснить (сам он всё ещё отдыхает).
'''

inf = 1000000
def get_time(islands):
    tr_d = dict()
    start, fin = islands[0], islands[-1]
    if start == fin:
        return 0
    prev = start
    tr_d[prev] = set()
    for i in range(1, len(islands)):
        cur = islands[i]
        if cur == prev:
            continue
        tr_d[prev].add(cur)
        if cur in tr_d:
            tr_d[cur].add(prev)
        else:
            tr_d[cur] = set([prev])
        prev = cur

    visited = set(start)

    return unv_dist

#islands = map(int, input.split())
islands = list(map(int, '11 -86 -86 201 11 86 86 86 3 201'.split()))
print(get_time(islands))

assert (get_time([2,3,4,2])) == 0